{"firstHeader":"class","last_chapter_rule":".detail-list-select&&li,-1&&a&&Text","pageList":[{"col_type":"pic_3_square","name":"三级","path":"rule","rule":"var 三级 = $('').rule(() => {\n    var d = [];\n    var img = []\n    var html = fetch(MY_URL.replace('hiker://empty##',''), {\n        headers: {\n            'User-Agent':'Mozilla/5.0 (iPhone; CPU iPhone OS 15_2 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/14.0 Mobile/15E148 Safari/604.1'\n        }\n    })\n    var list = pdfa(html, 'body&&#cp_img&&.lazy_img')\n\n    list.forEach(item => {\n        var pic = pdfh(item, '.lazy_img&&data-r-src')\n        d.push({\n            img: pic+\"@js=\" + $.toString((rule) => {\n        const image = $.require(\"hiker://page/image?rule=\" + rule);\n        return image.imageDecrypt();\n    }, MY_RULE.title),\n            url: pic,\n            col_type: \"pic_1_full\",\n        })\n    })\n    setResult(d)\n})"},{"name":"图片","path":"image","rule":"js:\nconst SoftReference = java.lang.ref.SoftReference;\nconst Cipher = Cipher = javax.crypto.Cipher;\nconst IvParameterSpec = javax.crypto.spec.IvParameterSpec;\nconst SecretKeySpec = javax.crypto.spec.SecretKeySpec;\nconst KEY = new java.lang.String(\"my2ecret782ecret\");\nconst f2319IV = new java.lang.String(\"my2ecret782ecret\");\nconst KEY_ALGORITHM = \"AES\";\nconst AES_MODE = \"AES/CBC/PKCS7Padding\";\n\nfunction decryptData(file2Bytes) {\n    try {\n        let secretKeySpec = new SecretKeySpec(KEY.getBytes(), KEY_ALGORITHM);\n        let ivParameterSpec = new IvParameterSpec(f2319IV.getBytes());\n        let cipher = Cipher.getInstance(AES_MODE);\n        cipher.init(2, secretKeySpec, ivParameterSpec);\n        return cipher.doFinal(file2Bytes);\n        return new SoftReference(cipher.doFinal(file2Bytes)).get();\n    } catch (e) {\n        //e.printStackTrace();\n        log(e.toString());\n        return null;\n    }\n}\n\n$.exports.imageDecrypt = function() {\n    let javaImport = new JavaImporter();\n    javaImport.importPackage(\n        Packages.com.example.hikerview.utils\n    );\n    with(javaImport) {\n        let bytes = FileUtil.toBytes(input);\n        bytes = decryptData(bytes);\n        return FileUtil.toInputStream(bytes);\n    }\n}\n"}],"title":"漫蛙·Q","author":"发粪涂墙","version":0,"type":"cartoon","url":"https://mwcomicq.xyz/getBooks?page=fypage@-1@&tag=fyarea&end=fysort&gender=2&has_full=-1&area=fyclass&sort=0","col_type":"movie_3_marquee","class_name":"全部&韩国&日漫&国漫&台漫&其他","class_url":"1&2&3&4&5&6","area_name":"全部&恋爱&热血&少女&都市&穿越&玄幻&滑稽搞笑&古风&魔法/奇幻&校园&冒险&剧情&其他&奇幻&国漫&大女主&韩漫&日常&治愈&后宫&爱情&生活&魔幻&搞笑&少男&惊悚/悬疑&动作&重生&连载&非现代&少年&爆笑&逆袭&总裁&战斗&霸总&宫廷&科幻&唯美&纯情少女&青春&悬疑&修真&恐怖&知音漫客&系统&恋爱生活&复仇&灵异&热血机战&长条&励志&科幻未来&日漫&纯爱&武侠&推理悬疑&魔法奇幻&浪漫&恐怖惊悚&脑洞&职场&橘味&惊悚&萌系&高甜&装逼&推理&漫客栈&异能&耽美&古装&体育竞技&格斗&修仙","area_url":"&恋爱&热血&少女&都市&穿越&玄幻&滑稽搞笑&古风&魔法/奇幻&校园&冒险&剧情&其他&奇幻&国漫&大女主&韩漫&日常&治愈&后宫&爱情&生活&魔幻&搞笑&少男&惊悚/悬疑&动作&重生&连载&非现代&少年&爆笑&逆袭&总裁&战斗&霸总&宫廷&科幻&唯美&纯情少女&青春&悬疑&修真&恐怖&知音漫客&系统&恋爱生活&复仇&灵异&热血机战&长条&励志&科幻未来&日漫&纯爱&武侠&推理悬疑&魔法奇幻&浪漫&恐怖惊悚&脑洞&职场&橘味&惊悚&萌系&高甜&装逼&推理&漫客栈&异能&耽美&古装&体育竞技&格斗&修仙","sort_name":"全部&完结","year_name":"","sort_url":"&1","year_url":"","find_rule":"js:\nvar d = [];\n\narr = JSON.parse(getResCode()).books;\n\nfor (let data of arr) {\n    d.push({           \n        title: data.book_name ,\n        desc: data.last_chapter,\n        pic_url: 'https://img.manwa.me' + data.cover_url,\n        col_type: \"\",\n        url: MY_HOME+\"/book/\" + data.id+'#immersiveTheme#'\n    });\n}\n\nsetResult(d);","searchFind":"body&&.book-list;\na&&title;\na&&href.js:input+'#immersiveTheme#';\nspan&&Text;\np&&Text;\nimg&&data-original;","search_url":"/search?keyword=**","group":"#️⃣测试","detail_col_type":"movie_3_marquee","detail_find_rule":"js:\nvar d = [];\n\nvar html = getResCode();\nvar des_pic = pdfh(html, '.lazy&&data-original');\n\nvar des_desc = pdfh(html, '.detail-desc&&Text').replace(/详情|介绍|简介/, '');\n\nvar des_text = pdfa(html, '.detail-main-info&&p').map(name => pdfh(name, 'Text'))\n\nd.push({\n    title: des_text.join('\\n'),\n    pic_url: des_pic,\n    desc: des_desc,\n    url: MY_URL,\n    col_type: 'movie_1_vertical_pic_blur'\n});\n\n\nlet lazy = $(\"\").lazyRule(() => {\n    var pics = [];\n\n    var html = request(input)\n    if (!/lazy_img/.test(html)) {\n        html = post(input)\n    }\n\n    pdfa(html, 'body&&#cp_img&&.lazy_img').forEach(list => {\n        var img = pdfh(list, '.lazy_img&&data-r-src') + \"@js=\" + $.toString(() => {\n            const image = $.require(\"hiker://page/image?rule=聚漫🔮\");\n            return image.imageDecrypt();\n        }, MY_RULE.title)\n        pics.push(img)\n    })\n\n    return \"pics://\" + pics.join(\"&&\")\n});\n\n\nvar list = pdfa(html, 'body&&.detail-list-select&&li');\neval(JSON.parse(request('hiker://page/rule')).rule);\nfor (let i in list) {\n    let title = pdfh(list[i], 'Text')\n    let url = pd(list[i], 'a&&href')\n    d.push({\n        title: title,\n        url: url + lazy,\n        col_type: 'text_2'\n    })\n}\n\nsetResult(d);","sdetail_col_type":"movie_3_marquee","sdetail_find_rule":"*","ua":"mobile","preRule":"","pages":"[{\"col_type\":\"pic_3_square\",\"name\":\"三级\",\"path\":\"rule\",\"rule\":\"var 三级 = $('').rule(() => {\\n    var d = [];\\n    var img = []\\n    var html = fetch(MY_URL.replace('hiker://empty##',''), {\\n        headers: {\\n            'User-Agent':'Mozilla/5.0 (iPhone; CPU iPhone OS 15_2 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/14.0 Mobile/15E148 Safari/604.1'\\n        }\\n    })\\n    var list = pdfa(html, 'body&&#cp_img&&.lazy_img')\\n\\n    list.forEach(item => {\\n        var pic = pdfh(item, '.lazy_img&&data-r-src')\\n        d.push({\\n            img: pic+\\\"@js=\\\" + $.toString((rule) => {\\n        const image = $.require(\\\"hiker://page/image?rule=\\\" + rule);\\n        return image.imageDecrypt();\\n    }, MY_RULE.title),\\n            url: pic,\\n            col_type: \\\"pic_1_full\\\",\\n        })\\n    })\\n    setResult(d)\\n})\"},{\"name\":\"图片\",\"path\":\"image\",\"rule\":\"js:\\nconst SoftReference = java.lang.ref.SoftReference;\\nconst Cipher = Cipher = javax.crypto.Cipher;\\nconst IvParameterSpec = javax.crypto.spec.IvParameterSpec;\\nconst SecretKeySpec = javax.crypto.spec.SecretKeySpec;\\nconst KEY = new java.lang.String(\\\"my2ecret782ecret\\\");\\nconst f2319IV = new java.lang.String(\\\"my2ecret782ecret\\\");\\nconst KEY_ALGORITHM = \\\"AES\\\";\\nconst AES_MODE = \\\"AES/CBC/PKCS7Padding\\\";\\n\\nfunction decryptData(file2Bytes) {\\n    try {\\n        let secretKeySpec = new SecretKeySpec(KEY.getBytes(), KEY_ALGORITHM);\\n        let ivParameterSpec = new IvParameterSpec(f2319IV.getBytes());\\n        let cipher = Cipher.getInstance(AES_MODE);\\n        cipher.init(2, secretKeySpec, ivParameterSpec);\\n        return cipher.doFinal(file2Bytes);\\n        return new SoftReference(cipher.doFinal(file2Bytes)).get();\\n    } catch (e) {\\n        //e.printStackTrace();\\n        log(e.toString());\\n        return null;\\n    }\\n}\\n\\n$.exports.imageDecrypt = function() {\\n    let javaImport = new JavaImporter();\\n    javaImport.importPackage(\\n        Packages.com.example.hikerview.utils\\n    );\\n    with(javaImport) {\\n        let bytes = FileUtil.toBytes(input);\\n        bytes = decryptData(bytes);\\n        return FileUtil.toInputStream(bytes);\\n    }\\n}\\n\"}]","proxy":"","icon":""}